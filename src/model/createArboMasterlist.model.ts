import { z } from 'zod';

export const arbo_masterlist = z.object({
  region_name: z.string().optional(),
  region_code: z.string().optional(),
  province_name: z.string().optional(),
  province_code: z.string().optional(),
  muncity_name: z.string().optional(),
  muncity_code: z.string().optional(),
  barangay_name: z.string().optional(),
  barangay_code: z.string().optional(),
  cd: z.string().optional(),
  arc_type: z.string().optional(),
  arc_id: z.string().optional(),
  arc_name: z.string().optional(),
  arc_cluster_name: z.string().optional(),
  arbo_name: z.string().optional(),
  arbo_id: z.string().optional(),
  oma_level_2013: z.string().optional(),
  itema_status_2019: z.string().optional(),
  itema_level_2019: z.string().optional(),
  itema_status_current: z.string().optional(),
  itema_level_current: z.string().optional(),
  organization_status: z.string().optional(),
  organization_type: z.string().optional(),
  year_organized: z.number().optional(),
  registering_agency: z.string().optional(),
  year_registration: z.number().optional(),
  baseline_members: z.number().optional(),
  baseline_members_male: z.number().optional(),
  baseline_members_female: z.number().optional(),
  baseline_total_arbs: z.number().optional(),
  baseline_male_arbs: z.number().optional(),
  baseline_female_arbs: z.number().optional(),
  baseline_total_nonarbs: z.number().optional(),
  baseline_male_nonarbs: z.number().optional(),
  baseline_female_nonarbs: z.number().optional(),
  current_members: z.number().optional(),
  current_members_male: z.number().optional(),
  current_members_female: z.number().optional(),
  current_total_arbs: z.number().optional(),
  current_male_arbs: z.number().optional(),
  current_female_arbs: z.number().optional(),
  current_total_nonarbs: z.number().optional(),
  current_male_nonarbs: z.number().optional(),
  current_female_nonarbs: z.number().optional(),
  cbu_current: z.number().optional(),
  cbu_mem_current: z.number().optional(),
  savings_current: z.number().optional(),
  sav_mem_current: z.number().optional(),
  assets_current: z.number().optional(),
  liabilities_current: z.number().optional(),
  services_provided: z.string().optional(),
  trainings_cap_dev: z.boolean().optional(),
  apcp: z.boolean().optional(),
  linksfarm: z.boolean().optional(),
  up_valuing: z.boolean().optional(),
  cp_wash: z.boolean().optional(),
  coop_strengthening: z.boolean().optional(),
  vlcep: z.boolean().optional(),
  vlfed: z.boolean().optional(),
  pbd_lawyering: z.boolean().optional(),
  social_entrep: z.boolean().optional(),
  sustainable_debris: z.boolean().optional(),
  sustainable_livelihood: z.boolean().optional(),
  climate_proofing: z.boolean().optional(),
  pahp: z.boolean().optional(),
  cbvcd: z.boolean().optional(),
  fbs: z.boolean().optional(),
  pilot_climate_proof: z.boolean().optional(),
  cap_pbd: z.boolean().optional(),
  card: z.boolean().optional(),
  watsan: z.boolean().optional(),
  pablo: z.boolean().optional(),
  micoop: z.boolean().optional(),
  malp: z.boolean().optional(),
  csf: z.boolean().optional(),
  aes: z.boolean().optional(),
  bds: z.boolean().optional(),
  pamana: z.boolean().optional(),
  bub_dar: z.boolean().optional(),
  arf: z.boolean().optional(),
  sbfp: z.boolean().optional(),
  claap: z.boolean().optional(),
  arbold: z.boolean().optional(),
  total_1: z.number().optional(),
  arcdp_i: z.boolean().optional(),
  arcdp_ii: z.boolean().optional(),
  arcp_i: z.boolean().optional(),
  arcp_ii: z.boolean().optional(),
  arisp_i: z.boolean().optional(),
  arisp_ii: z.boolean().optional(),
  arisp_iii: z.boolean().optional(),
  bcsea_bazal: z.boolean().optional(),
  bcsea_umiray: z.boolean().optional(),
  birasp: z.boolean().optional(),
  cmarprp: z.boolean().optional(),
  converge: z.boolean().optional(),
  iarcdsp: z.boolean().optional(),
  minsaad: z.boolean().optional(),
  nmciremp: z.boolean().optional(),
  papsra: z.boolean().optional(),
  spots: z.boolean().optional(),
  spots_ii: z.boolean().optional(),
  starcm: z.boolean().optional(),
  tpkp: z.boolean().optional(),
  wmcip: z.boolean().optional(),
  total_2: z.number().optional(),
  grand_total: z.number().optional(),
  remarks: z.string().optional(),
  status: z.string().optional(),
});

export type ARBO_MASTERLIST = z.infer<typeof arbo_masterlist>;

export const encrypt_arbo_masterlist = z.object({
  region_name: z.string().optional(),
  region_code: z.string().optional(),
  province_name: z.string().optional(),
  province_code: z.string().optional(),
  muncity_name: z.string().optional(),
  muncity_code: z.string().optional(),
  barangay_name: z.string().optional(),
  barangay_code: z.string().optional(),
  cd: z.string().optional(),
  arc_type: z.string().optional(),
  arc_id: z.string().optional(),
  arc_name: z.string().optional(),
  arc_cluster_name: z.string().optional(),
  arbo_name: z.string().optional(),
  arbo_id: z.string().optional(),
  oma_level_2013: z.string().optional(),
  itema_status_2019: z.string().optional(),
  itema_level_2019: z.string().optional(),
  itema_status_current: z.string().optional(),
  itema_level_current: z.string().optional(),
  organization_status: z.string().optional(),
  organization_type: z.string().optional(),
  year_organized: z.string().optional(),
  registering_agency: z.string().optional(),
  year_registration: z.string().optional(),
  baseline_members: z.string().optional(),
  baseline_members_male: z.string().optional(),
  baseline_members_female: z.string().optional(),
  baseline_total_arbs: z.string().optional(),
  baseline_male_arbs: z.string().optional(),
  baseline_female_arbs: z.string().optional(),
  baseline_total_nonarbs: z.string().optional(),
  baseline_male_nonarbs: z.string().optional(),
  baseline_female_nonarbs: z.string().optional(),
  current_members: z.string().optional(),
  current_members_male: z.string().optional(),
  current_members_female: z.string().optional(),
  current_total_arbs: z.string().optional(),
  current_male_arbs: z.string().optional(),
  current_female_arbs: z.string().optional(),
  current_total_nonarbs: z.string().optional(),
  current_male_nonarbs: z.string().optional(),
  current_female_nonarbs: z.string().optional(),
  cbu_current: z.string().optional(),
  cbu_mem_current: z.string().optional(),
  savings_current: z.string().optional(),
  sav_mem_current: z.string().optional(),
  assets_current: z.string().optional(),
  liabilities_current: z.string().optional(),
  services_provided: z.string().optional(),
  trainings_cap_dev: z.string().optional(),
  apcp: z.string().optional(),
  linksfarm: z.string().optional(),
  up_valuing: z.string().optional(),
  cp_wash: z.string().optional(),
  coop_strengthening: z.string().optional(),
  vlcep: z.string().optional(),
  vlfed: z.string().optional(),
  pbd_lawyering: z.string().optional(),
  social_entrep: z.string().optional(),
  sustainable_debris: z.string().optional(),
  sustainable_livelihood: z.string().optional(),
  climate_proofing: z.string().optional(),
  pahp: z.string().optional(),
  cbvcd: z.string().optional(),
  fbs: z.string().optional(),
  pilot_climate_proof: z.string().optional(),
  cap_pbd: z.string().optional(),
  card: z.string().optional(),
  watsan: z.string().optional(),
  pablo: z.string().optional(),
  micoop: z.string().optional(),
  malp: z.string().optional(),
  csf: z.string().optional(),
  aes: z.string().optional(),
  bds: z.string().optional(),
  pamana: z.string().optional(),
  bub_dar: z.string().optional(),
  arf: z.string().optional(),
  sbfp: z.string().optional(),
  claap: z.string().optional(),
  arbold: z.string().optional(),
  total_1: z.string().optional(),
  arcdp_i: z.string().optional(),
  arcdp_ii: z.string().optional(),
  arcp_i: z.string().optional(),
  arcp_ii: z.string().optional(),
  arisp_i: z.string().optional(),
  arisp_ii: z.string().optional(),
  arisp_iii: z.string().optional(),
  bcsea_bazal: z.string().optional(),
  bcsea_umiray: z.string().optional(),
  birasp: z.string().optional(),
  cmarprp: z.string().optional(),
  converge: z.string().optional(),
  iarcdsp: z.string().optional(),
  minsaad: z.string().optional(),
  nmciremp: z.string().optional(),
  papsra: z.string().optional(),
  spots: z.string().optional(),
  spots_ii: z.string().optional(),
  starcm: z.string().optional(),
  tpkp: z.string().optional(),
  wmcip: z.string().optional(),
  total_2: z.string().optional(),
  grand_total: z.string().optional(),
  remarks: z.string().optional(),
  status: z.string().optional(),
});

export type ENCRYPT_ARBO_MASTERLIST = z.infer<typeof encrypt_arbo_masterlist>;
